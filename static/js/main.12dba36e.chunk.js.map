{"version":3,"sources":["utils/DataAreaContext.js","components/DataBody/index.js","components/DataTable/index.js","components/SearchBox/index.js","components/Nav/index.js","utils/API.js","components/DataArea/index.js","components/Main/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["DataAreaContext","React","createContext","DataBody","context","useContext","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","DataTable","id","headings","width","style","onClick","handleSort","toLowerCase","SearchBox","type","placeholder","aria-label","onChange","e","handleSearchChange","Nav","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","data","Provider","value","event","filter","filteredList","item","indexOf","heading","sortedUsers","sort","a","b","localeCompare","length","Main","Wrapper","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.12dba36e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DataAreaContext = React.createContext({\r\n\r\n});\r\n\r\nexport default DataAreaContext;","import React, { useContext } from \"react\";\r\nimport \"./DataBody.css\"\r\nimport DataAreaContext from \"../../utils/DataAreaContext\"\r\n\r\nconst DataBody = () => {\r\n  const context = useContext(DataAreaContext);\r\n\r\n  function formatDate(date){\r\n    const dateArray = date.split(\"-\");\r\n    const year = dateArray[0];\r\n    const month = dateArray[1];\r\n    const dayArray = dateArray[2].split(\"T\");\r\n    const day = dayArray[0];\r\n    const formattedDate =[month, day, year].join(\"-\");\r\n    return formattedDate;\r\n}\r\nreturn (\r\n    <tbody>\r\n    {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\r\n      context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\r\n        return (\r\n          <tr key={login.uuid}>\r\n            <td data-th=\"Image\" className=\"align-middle\">\r\n              <img\r\n                src={picture.medium}\r\n                alt={\"profile image for \" + name.first + \" \" + name.last}\r\n                className=\"img-responsive\"\r\n              />\r\n            </td>\r\n            <td data-th=\"Name\" className=\"name-cell align-middle\">\r\n              {name.first} {name.last}\r\n            </td>\r\n            <td data-th=\"Phone\" className=\"align-middle\">\r\n              {phone}\r\n            </td>\r\n            <td data-th=\"Email\" className=\"align-middle\">\r\n              <a href={\"mailto:\" + email} target=\"__blank\">\r\n                {email}\r\n              </a>\r\n            </td>\r\n            <td data-th=\"DOB\" className=\"align-middle\">\r\n              {formatDate(dob.date)}\r\n            </td>\r\n          </tr>\r\n        );\r\n      })\r\n    ) : (\r\n      <></>\r\n    )}\r\n  </tbody>\r\n);\r\n}\r\n\r\nexport default DataBody;","import React, { useContext } from \"react\";\r\nimport DataBody from \"../DataBody\";\r\nimport \"./DataTable.css\";\r\nimport DataAreaContext from \"../../utils/DataAreaContext\";\r\n\r\nconst DataTable = () => {\r\n  const context = useContext(DataAreaContext);\r\n  return (\r\n    <div className=\"datatable mt-5\">\r\n      <table\r\n        id=\"table\"\r\n        className=\"table table-striped table-hover table-condensed\"\r\n      >\r\n        <thead>\r\n          <tr>\r\n            {context.developerState.headings.map(({ name, width }) => {\r\n              return (\r\n                <th\r\n                  className=\"col\"\r\n                  key={name}\r\n                  style={{ width }}\r\n                  onClick={() => {\r\n                    context.handleSort(name.toLowerCase());\r\n                  }}\r\n                >\r\n                  {name}\r\n                  <span className=\"pointer\"></span>\r\n                </th>\r\n              );\r\n            })}\r\n          </tr>\r\n        </thead>\r\n\r\n        <DataBody />\r\n      </table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataTable;","import React, { useContext } from \"react\";\r\nimport \"./SearchBox.css\";\r\nimport DataAreaContext from \"../../utils/DataAreaContext\";\r\n// Using the datalist element we can create \r\n\r\nconst SearchBox = () => {\r\n  const context = useContext(DataAreaContext);\r\n\r\n  return (\r\n      <div className=\"searchbox\">\r\n          <form className=\"form-inline\">\r\n              <input\r\n                  className=\"form-control mr-sm-2\"\r\n                  type=\"search\"\r\n                  placeholder=\"Search\"\r\n                  aria-label=\"Search\"\r\n                  onChange={e => context.handleSearchChange(e)}\r\n              />\r\n              <button className=\"btn my-2 my-sm-0\" type=\"submit\">\r\n                  Search\r\n               </button>\r\n          </form>\r\n      </div>\r\n  );\r\n}\r\nexport default SearchBox;\r\n\r\n// Class activity \r\n\r\n// function SearchForm(props) {\r\n//   return (\r\n//     <form className=\"search\">\r\n//       <div className=\"form-group\">\r\n//         <label htmlFor=\"breed\">Breed Name:</label>\r\n//         <input\r\n//           value={props.search}\r\n//           onChange={props.handleInputChange}\r\n//           name=\"breed\"\r\n//           list=\"breeds\"\r\n//           type=\"text\"\r\n//           className=\"form-control\"\r\n//           placeholder=\"Type in a dog breed to begin\"\r\n//           id=\"breed\"\r\n//         />\r\n//         <datalist id=\"breeds\">\r\n//           {props.breeds.map(breed => (\r\n//             <option value={breed} key={breed} />\r\n//           ))}\r\n//         </datalist>\r\n//         <button type=\"submit\" onClick={props.handleFormSubmit} className=\"btn btn-success\">\r\n//           Search\r\n//         </button>\r\n//       </div>\r\n//     </form>\r\n//   );\r\n// }","import React from \"react\";\r\nimport SearchBox from \"../SearchBox\";\r\nimport \"./Nav.css\";\r\n\r\nfunction Nav({ handleSearchChange }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n      <div className=\"collapse navbar-collapse row\" id=\"navbarNav\">\r\n        <div className=\"input-group col-8\">\r\n          <div className=\"input-group-prepend\">\r\n            <div className=\"search-area col-8\">\r\n              <SearchBox handleSearchChange={handleSearchChange} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Nav;\r\n\r\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\r\n// function Navbar() {\r\n//   return (\r\n//     <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n//       <Link className=\"navbar-brand\" to=\"/\">\r\n//         Pupster\r\n//       </Link>\r\n//       <div>\r\n//         <ul className=\"navbar-nav\">\r\n//           <li className=\"nav-item\">\r\n//             <Link\r\n//               to=\"/\"\r\n//               className={\r\n//                 window.location.pathname === \"/\" || window.location.pathname === \"/about\"\r\n//                   ? \"nav-link active\"\r\n//                   : \"nav-link\"\r\n//               }\r\n//             >\r\n//               About\r\n//             </Link>\r\n//           </li>\r\n//           <li className=\"nav-item\">\r\n//             <Link\r\n//               to=\"/discover\"\r\n//               className={window.location.pathname === \"/discover\" ? \"nav-link active\" : \"nav-link\"}\r\n//             >\r\n//               Discover\r\n//             </Link>\r\n//           </li>\r\n//           <li className=\"nav-item\">\r\n//             <Link\r\n//               to=\"/search\"\r\n//               className={window.location.pathname === \"/search\" ? \"nav-link active\" : \"nav-link\"}\r\n//             >\r\n//               Search\r\n//             </Link>\r\n//           </li>\r\n//         </ul>\r\n//       </div>\r\n//     </nav>\r\n//   );\r\n// }\r\n\r\n// export default Navbar;\r\n","import axios from \"axios\";\r\n// Export an object containing methods\r\nexport default{ \r\n    \r\n    getUsers:function(){    \r\n\r\n        return axios.get(\"https://randomuser.me/api/?results=200&nat=us\");\r\n    }\r\n};","import React, {useState, useEffect} from \"react\";\r\nimport DataTable from \"../DataTable\";\r\nimport Nav from \"../Nav\";\r\nimport API from \"../../utils/API\";\r\nimport \"./DataArea.css\";\r\nimport DataAreaContext from \"../../utils/DataAreaContext.js\"\r\n\r\nconst DataArea = () => {\r\n  const [developerState, setDeveloperState] = useState({\r\n    users: [],\r\n    order: \"ascend\",\r\n    filteredUsers: [],\r\n    headings: [\r\n      { name: \"Image\", width: \"10%\", },\r\n      { name: \"Name\", width: \"10%\", },\r\n      { name: \"Phone\", width: \"20%\", },\r\n      { name: \"Email\", width: \"20%\", },\r\n      { name: \"DOB\", width: \"10%\", }\r\n    ]\r\n  });\r\n\r\n  const handleSort = heading => {\r\n    if (developerState.order === \"descend\") {\r\n        setDeveloperState({\r\n            order:\"ascend\"\r\n        })\r\n    } else{\r\n        setDeveloperState({\r\n            order:\"descend\"\r\n        })\r\n    }\r\n\r\n    const compareFnc = (a, b) => {\r\n      if (developerState.order === \"ascend\") {\r\n        if (a[heading] === undefined) {\r\n          return 1;\r\n        } else if (b[heading] === undefined) {\r\n          return -1;\r\n        } else if (heading === \"name\") {\r\n          return a[heading].first.localeCompare(b[heading].first);\r\n        } else {\r\n          return b[heading] - a[heading];\r\n        } \r\n      } else {\r\n    if (a[heading] === undefined){\r\n        return 1;\r\n    } else if (b[heading] === undefined){\r\n        return -1;\r\n    } else if (heading ===\"name\"){\r\n        return b[heading].first.localeCompare(a[heading].first);\r\n    } else {\r\nreturn b[heading]-  a[heading];\r\n    }\r\n}\r\n}\r\n    const sortedUsers = developerState.filteredUsers.sort(compareFnc);\r\n\r\n    setDeveloperState({\r\n      ...developerState,\r\n      filteredUsers: sortedUsers\r\n});\r\n\r\n};\r\n\r\n  const handleSearchChange = event => {\r\n    const filter = event.target.value;\r\n    const filteredList = developerState.users.filter(item => {\r\n      let values = item.name.first.toLowerCase();\r\n      return values.indexOf(filter.toLowerCase()) !== -1;\r\n    });\r\n\r\n    setDeveloperState({ \r\n    ...developerState, \r\n    filteredUsers: filteredList });\r\n  };\r\n\r\n  useEffect(() => {\r\n    API.getUsers().then(results => {\r\n      setDeveloperState({\r\n        ...developerState,\r\n        users: results.data.results,\r\n        filteredUsers: results.data.results\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <DataAreaContext.Provider\r\n      value={{ developerState, handleSearchChange, handleSort }}\r\n    >\r\n      <Nav />\r\n      <div className=\"data-area\">\r\n        {developerState.filteredUsers.length > 0 \r\n? <DataTable />\r\n : <div></div>\r\n }\r\n      </div>\r\n    </DataAreaContext.Provider>\r\n  );\r\n}\r\n\r\nexport default DataArea;","import React from \"react\";\r\nimport DataArea from \"../DataArea/index.js\";\r\nimport \"./Main.css\";\r\n\r\nfunction Main (){\r\n    return (\r\n        <>\r\n        <DataArea />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Main;","import React from \"react\";\r\nimport \"./Wrapper.css\";\r\n\r\nfunction Wrapper ({ children }){\r\n    return (\r\n        <div className=\"wrapper\">\r\n            { children }\r\n        </div>\r\n    );\r\n}\r\nexport default Wrapper;","import React from \"react\";\r\nimport \"./Header.css\";\r\n\r\nfunction Header () {\r\n    return (\r\n        <div className=\"header\">\r\n            <h1>User Directory</h1>\r\n            <p>Click on Name to filter the results</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\nimport Main from './components/Main';\nimport Wrapper from './components/Wrapper';\nimport Header from './components/Header';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <Wrapper>\n     <Header />\n     <Main />\n   </Wrapper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}